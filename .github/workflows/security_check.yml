name: Security Check

on: 
 push:
    branches:
      - master
 workflow_dispatch:

# Secret scan to detect scan in code using detect secret.
jobs:
  secret_scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          sudo apt-get install -y diffutils jq python3 python3-pip
          python -m pip install detect-secrets
          python3 -m pip install tabulate
          python -m pip install --upgrade pip
          
      - name: Run Detect Secrets Scan
        run: |
          detect-secrets scan --exclude-files '\.git/.*' --exclude-files '\.gitmodules' >> detect_secrets_output.txt

      - name: Parse Detect Secrets Output
        id: parse_output
        run: |
          import json
          import os
          import sys
          from tabulate import tabulate
          with open("detect_secrets_output.txt", "r") as file:
              data = file.read()
          data_json = json.loads(data)
          if not data_json:
              sys.exit(0)

          table = []  # Initialize an empty table
          table_headers = ["Secret Type", "File", "Secret", "Line Number"]  # Modified header
          for file, secrets in data_json["results"].items():
              for secret in secrets:
                  if not isinstance(secret, dict):
                    continue
                  secret_type = secret.get("type", "NA")
                  filename = secret.get("filename", "NA")
                  secret_plain = secret.get("secret", "NA")  # Retrieve plain text secret instead of hashed_secret
                  line_number = secret.get("line_number", "NA")
                  row = [secret_type, filename, secret_plain, line_number]  # Use secret_plain instead of hashed_secret
                  table.append(row)

          print(tabulate(table, headers=table_headers, tablefmt='grid'))
          secrets_found = len(table) > 0
          if secrets_found:
              sys.exit(1)
        shell: python
