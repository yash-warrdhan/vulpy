name: Security Check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  secret_scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          sudo apt-get install -y diffutils jq python3 python3-pip
          python -m pip install detect-secrets
  
      - name: Run Detect Secrets Scan
        run: |
          detect-secrets scan > detect_secrets_output.txt

      - name: Check for secrets
        run: |
          if grep -q "Secret detected" detect_secrets_output.txt; then
            echo "Secrets found, blocking PR"
            exit 1
          fi

      - name: Upload Output as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: secret_scan_output
          path: detect_secrets_output.txt
 
  Bandit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    name: Python ${{ matrix.os }} 

    steps:
    - uses: actions/checkout@v2

    - name: Security check - Bandit
      uses: ioggstream/bandit-report-artifacts@v0.0.2
      with:
        project_path: .
        ignore_failure: true

    - name: Check for security risks
        run: |
          if grep -q "HIGH" output/security_report.txt; then
            echo "Security risks found, blocking PR"
            exit 1
          fi

    - name: Security check report artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Security report
        path: output/security_report.txt
          
 
  sast:
    name: Semgrep SAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
      
      - name: Install Semgrep
        run: pip install semgrep
      
      - name: Run Semgrep
        run: semgrep --config auto --severity=ERROR --severity=WARNING --severity=INFO --sarif --output sast_scan.sarif
      
      - name: Check for warnings
        run: |
          if grep -q "WARNING" sast_scan.sarif; then
            echo "Warnings found, blocking PR"
            exit 1
          fi

      - name: Run commands
        run: |
          sudo pip3 install sarif-tools
          sarif html sast_scan.sarif
          chmod 777 sast_scan.html
          ls -la
          sed 's|<h3>Sarif Summary: <b>semgrep<\/b><\/h3>|<h3 style="text-align: center;">Vunet SAST Scanning Report<\/h3>|' sast_scan.html > tmp_report_html.html && mv tmp_report_html.html sast_scan.html
          { echo '<div style="text-align:center"><img src="https://vunetsystems.com/wp-content/uploads/2021/12/Vunet-Logo.png" width="200" height="50" /></div>'; cat sast_scan.html; } > tmp_report_html.html && mv tmp_report_html.html sast_scan.html
      
      - name: Upload all artifacts
        uses: actions/upload-artifact@v2
        with:
          name: all-artifacts
          path: |
            sast_scan.sarif
            sast_scan.html
            # Add other artifacts here separated by a newline
            detect_secrets_output.txt
